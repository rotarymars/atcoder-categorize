
		公式
		
			
				Ex - Make Q 解説
			
			by yuto1115
			
		
		解説
		
		
			黒く塗った辺のうちサイクルに含まれない唯一の辺（これを飛び出た辺とよぶ）が結ぶ \(2\) つの頂点のうち、サイクルに含まれる方の頂点を \(a\) とします。サイクルにおいて頂点 \(a\) に隣接する \(2\) つの頂点を \(b,c\) とします。飛び出た辺が結ぶ \(2\) つの頂点のうち \(a\) でない方を \(d\) とします。元の条件では \(d\) はサイクルに含まれない必要がありますが、実際のところ、\(d \neq b\) かつ \(d \neq c\) が唯一の条件であるとして答えを求めても問題ありません（\(a,b,c\) 以外でサイクルに含まれる頂点と \(d\) が一致するとき、黒く塗られた辺のいくつかを白く塗れば Q を作れるためです）。

\(a\) を全探索します（以下、 \(a\) を固定して考えます）。まず、頂点 \(a\) を含むサイクルのうち、含まれる辺の総コストが最小であるものを \(O(N^2)\) で求めます。求め方は yukicoder No.1320 などで説明されていますが、簡潔には以下の通りです。


頂点 \(a\) を根とする最短路木 \(T\) を構築する。
各頂点 \(j\) について、ラベル \(L_j\) を以下のように定める：


\(j=a\) のとき、\(L_j=a\)
\(j \neq a\) のとき、\(T\) 上で頂点 \(j\)  の祖先（\(j\) を含む）かつ頂点 \(a\) の子である唯一の頂点を \(x\) として、\(L_j = x\)

\(L_{A_i} \neq L_{B_i}\) を満たす各 \(i\) について、「\(T\) 上での \(a-A_i\) パス」「\(T\) 上での \(a-B_i\) パス」「辺 \(i\)」をつなげてできるサイクルを \(\text{cycle}_i\) とする。\(\text{cycle}_i\) のうち含まれる辺の総コストが最小であるものが求めるサイクルである。


正当性は、\(L_{A_i} \neq L_{B_i}\) を満たす辺 \(i\) がかならず \(1\) つ以上サイクルに含まれること、\(T\) が最短路木であることから示せます。

今求めたこのサイクルが作った Q に含まれるとき、飛び出た辺としては、「頂点 \(a\) に繋がる辺のうちもう一方の端点が \(b\) でも \(c\) でもないもの」のうちコストが最小であるもののを選ぶのが明らかに最適です。あとは「頂点 \(a,b\) を結ぶ辺」や「頂点 \(a,c\) を結ぶ辺」が飛び出た辺である場合をそれぞれ考慮すればよいですが、これは、それぞれの辺を一旦グラフから削除した上で上述の最小サイクルを求めるアルゴリズムをもう一度行うことで求められます。

よってこの問題を \(O(N^3)\) で解くことができました。

実装例 (C++) :



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
