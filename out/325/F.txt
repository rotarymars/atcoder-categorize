
		公式
		
			
				F - Sensor Optimization Dilemma  解説
			
			by yuto1115
			
		
		解説
		
		
			DP を用いて解くことを考えます。一番簡単に思いつくのは「何個目の区間まで見たか」「センサー \(1\) を何個使ったか」「センサー \(2\) を何個使ったか」をキーとして持つ DP ですが、これでは実行時間制限に間に合いません。ここで、今までに使ったセンサー \(1\) の個数が固定されているとき、使ったセンサー \(2\) の個数は最小のもの以外考える必要がないことから、以下のような DP が自然に導出されます。
\[dp[i][j] =(i\text{ 個目の区間まで見て、使ったセンサー }1\text{ の個数が }j\text{ であるときの、使ったセンサー }2\text{ の個数の最小値})\]遷移は、\(i\) 個目の区間を監視するために使うセンサー \(1\) の個数を全探索することで、
\[dp[i][j] = \max_{0 \leq k \leq j} \bigg(dp[i-1][j-k] + \Big\lceil \frac{\max(D_i-kL_1,0)}{L_2} \Big\rceil \bigg)\]となります。状態が \(O(NK_1)\)、遷移が \(O(K_1)\) なので全体の計算量は \(O(NK_1^2)\) となり、十分高速です。

実装例 (C++) :



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
