
		公式
		
			
				D - Poisonous Full-Course 解説
			
			by physics0523
			
		
		
		
		
			動的計画法でこの問題を解くことを考えます。すると、どのような情報を保持するべきでしょうか？

結論から言うと、以下の DP テーブルを作成することでこの問題を解くことができます。


\(dp[\) 料理 \(i\) \(][\) 高橋くんの状態 \(j\) \(]\)


料理 \(i\) までの料理を食べるか下げてもらうか選択した時に、高橋くんの状態が \(j\) ( \(0\) … 高橋くんがお腹を壊していない、 \(1\) … 高橋くんがお腹を壊している ) である時の、食べた料理の美味しさの総和の最大値



この問題が解けなかった方は、上で 「どのような DP テーブルを作れば解けるか」を示したので、「 DP テーブルの遷移はどうするべきか」を考えて実装してみてください。動的計画法の良い練習になります。


遷移の解説





実装例(C++):



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
