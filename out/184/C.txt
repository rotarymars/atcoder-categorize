
		公式
		
			
				C - Super Ryuma 解説
			
			by  tatyam
			
		
		
		
		
			マス \((a, b)\) からマス \((c, d)\) に移動できる \(3\) つの条件


\(a + b = c + d\)
\(a - b = c - d\)
\(|a - c| + |b - d| \le 3\)


のそれぞれによる移動を移動 A, B, C と呼ぶことにします。

まずは、より遠くに移動することができる移動 A と移動 B について考えましょう。
移動 A と移動 B を 1 回ずつ使うと、パリティの等しい (下図において色の同じ) 任意のマスに 2 手で移動することができます。
(これは、グリッド全体を \(45\) 度回転させると分かりやすいです。)



したがって、移動  C も合わせると、任意のマスに \(3\) 手で移動できることが分かります。

答えが \(3\) 以下になることがわかったので、 \(0\) 手、 \(1\) 手、 \(2\) 手でそれぞれ移動できるかを判定できれば、この問題を解くことができます。
\(0\) 手は同じマスかどうか、\(1\) 手は上の \(3\) つの条件を調べれば良いです。
\(2\) 手については、いくつかのパターンに分けられます。


移動 A + 移動 B :



パリティが等しい (上図において色が同じ) かどうか

\((a + b + c + d) \bmod 2 = 0\)

移動 C + 移動 C :



マンハッタン距離が \(6\) 以下かどうか
\(|a - c| + |b - d| \le 6\)

移動 A + 移動 C :



下図参照
\(|(a + b) - (c + d)| \le 3\)

移動 B + 移動 C :


下図参照
\(|(a - b) - (c - d)| \le 3\)





これらを実装すると、 AC が得られます。

実装例 (Python)



実装例 (C++)



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
