1. 問題概要
2. アルゴリズム

2015/10/24

©AtCoder Inc. All rights reserved.

9


• 空港A, Bを出発する飛行機がそれぞれN, M本ある
– Aを出発する時刻は ai, Bを出発する時刻は bj

• A→BにはX時間、B→AにはY時間かかる
• 時刻0に空港Aにいるので、なるべく多く空港間を往
復したい
• 制約
– 1<= N, M <=10^5, 1<=ai, bj <=10^9
– 30点: 1<=ai, bj <=10^5

2015/10/24

10


• どの飛行機に乗っても、空港間を往復する時間は
変わらない
• このとき、なるべく多く往復したいなら、乗れる飛行
機のうち最も早いものに乗るのが最適
– 最も早いもの以外に乗ったとき、到着時刻もそれだけ遅
れ、次に乗る飛行機の選択肢が減る（ことがある）。
– 最も早い飛行機以外に乗る最適な乗り方があるとすれば、
最も早いものに乗り、時間の差だけ次の空港で待てばい
いため、最も早いものに乗っても最大の往復回数を実現
できる。
• →→最も早いものに乗っても損は絶対ない。得もたまにある

2015/10/24

11


• 30点解法
– 空港A, Bについて、時刻t(0～10^5)に出発する飛行機が
あるかどうかを全て配列に初めにメモしておく
– (今いる空港, 今の時刻) を覚えて、ちょうど出発する飛行
機に乗れるなら乗る、というシミュレーションを繰り返す
– 空港Aに戻ってきた回数が答え。

• 満点解法
– (今いる空港, 今の時刻) を覚えて、次に出発する最も早
い飛行機を二分探索で探す
• 配列から(今の時刻)以上で最小の値を探すだけなので、簡単に
(C++ならstd::lower_bound)求まります

– あとは部分点と同様。
2015/10/24

12

