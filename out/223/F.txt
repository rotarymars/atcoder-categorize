
		公式
		
			
				F - Parenthesis Checking 解説
			
			by  blackyuki
			
		
		
		
		
			まず、長さ \(M\) の括弧列 \(S\) が正しい括弧列であるかを判定する方法を考えます。\(S\) の ( を \(+1\) 、) を \(-1\) に置き換えた数列を \(A=(A_1,A_2,\ldots,A_M)\) とし、\(A\) の前から累積和をとった数列を \(B=(B_0,B_1,\ldots,B_M)\) とします。例えば、\(S=\)(()) のとき \(A=(1,1,-1,-1)\) 、\(B=(0,1,2,1,0)\) です。このとき、\(S\) が正しい括弧列であるための条件は以下です。


\(B_M=0\) であり、かつ \(B\) の要素の最小値が \(0\) である


元の問題でのクエリは区間に対するクエリなので、セグメント木を用いることを考えます。セグメント木の各ノードには対応する連続部分文字列に対する \(B\) の要素の最小値と \(B_M\) の値を管理しておきます。これらの情報から \(2\) つの区間を \(O(1)\) でマージすることができるので、一点更新区間取得のセグメント木を用いることでこの問題が解けました。

別解として、\(B\) 自体をセグ木で管理すると、区間加算区間最小値取得のセグメント木を用いることで解くことも可能です。

実装例 (C++)



実装例（C++）（別解）



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
