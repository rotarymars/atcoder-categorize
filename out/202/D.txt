
		公式
		
			
				D - aab aba baa 解説
			
			by KoD
			
		
		
		
		
			辞書順が関係する問題では、前の文字から決めていくというのが定石です。では、この問題において、答えの先頭の文字が a  と b のどちらであるか判定するためにはどのようにすれば良いでしょうか？

これは次のように判定できます：


先頭が a であるような文字列の総数が \(K\) 個以上なら a
そうでないなら b


各 \(0 \leq i \leq A, 0 \leq j \leq B\) について、a が \(i\) 個と b が \(j\) 個からなる文字列の総数 \(C(i, j)\) を前もって計算しておきます。これは \((0, 0)\) からスタートし、\(x\) 軸の正の方向あるいは \(y\) 軸の正の方向に \(1\) 進むことを繰り返して \((i, j)\) に至る方法の総数に等しいため、単純な動的計画法によって求めることが出来ます。

\(S(i, j, k)\) を「a が \(i\) 個と b が \(j\) 個からなる文字列のうち、辞書順で \(k\) 番目のもの」と定義します。これは次のような場合分けによって求められます：


\(i = 0\) のとき、b が \(j\) 個からなる文字列
\(j = 0\) のとき、a が \(i\) 個からなる文字列
\(i > 0\) かつ \(j > 0\) のとき


\(C(i - 1, j) \geq k\) のとき、a に \(S(i - 1, j, k)\) を繋げた文字列
\(C(i - 1, j) < k\) のとき、b に \(S(i, j - 1, k - C(i - 1, j))\) を繋げた文字列



再帰関数として実装すると次のようになります (C++)：



ループによって非再帰で実装することも可能です (C++)：



全体の計算量は \(O((A + B)^2)\) あるいは \(O(AB)\) です。

		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
