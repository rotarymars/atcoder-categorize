
Number of Amidakuji

H = 100, W = 8 のケースで、あみだくじの個数は 34100 ≒ 1.4 ∗ 10153 個程度あり、到底全探
索できそうにありません。そこで、「動的計画法」 という方法を使ってみることにしましょう。
A(h, x) を、縦から h 列目を通過した (横棒を通った場合も含む) 直後に左から x 本目の縦棒に
いる場合の数とします。h = 0 のとき、1 列目より前を表すことにます。
h = 0, 1, 2, 3, …, H の順に上から下に降りていく感じで A(h, x) を更新していくことにします。
左から 1 本目の縦棒からスタートするので、A(0, 1) = 1、A(0, 2) = A(0, 3) = … = A(0, W ) = 0
になります。
A(h, x) が指しているあみだくじの経路からは、A(h + 1, x − 1), A(h + 1, x), A(h + 1, x + 1) の
いずれかの状態に行くことになります。A(h, x) の状態から何通りが x − 1 本目の縦棒に行って、
何通りが x 本目の縦棒にとどまって、何通りが x + 1 本目の縦棒に行くかは、h + 1 本目の横棒
の配置を全探索することで計算することができます。先ほどの x − 1, x, x + 1 本目に行く場合の
数をそれぞれ X, Y, Z とおくと、A(h + 1, x − 1), A(h + 1, x), A(h + 1, x + 1) の結果はそれぞれ
X ∗ A(h, x), Y ∗ A(h, x), Z ∗ A(h, x) 足されることになります。
したがって、計算量 O(HW 2W ) で解くことができます。H = 100, W = 8 のケースでも、十分
に間に合わせることができます。
おまけ: 実は先ほどの X,Y,Z の値はフィボナッチ数列 (F1 = F2 = 1, FN = FN −1 +FN −2 (N ≥ 3)
を満たす数列) を使って求めることができます。ある 1 列の横棒の配置の場合の数は、フィボナッ
チ数 FW +1 です。これを使えばこの問題を計算量 O(HW ) で解くことができます。ぜひ考えてみ
ましょう！
サンプルコード (C++)：
https://beta.atcoder.jp/contests/abc113/submissions/3540482

4


