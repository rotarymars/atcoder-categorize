1. 問題概要
2. アルゴリズム

2014/4/5

©AtCoder Inc. All rights reserved.

12


• 整数nが与えられる
• トリボナッチ数列の第n項を答えなさい
– ただし、数字が大きくなるので、10007で割った余りを出力
しなさい。

• トリボナッチ数列とは、3つ前の数字までを足した数
字が、次の数字になる数列の事を言います。
– 0,0,1,1,2,4,7,13,24…みたいなの

2014/4/5

13


• 入力
– 整数nを受け取る
• さっきと同じです！

2014/4/5

14


• 処理
– 4番目から順番に求める
• 1,2,3番目は、予めコンピュータに入力しておく。

– やり方は主に2通り
• 1つ前、2つ前、3つ前の数字を、変数に入れておく
– a = 0, b = 0, c = 1のような感じ
– １巡したら、a = 0, b = 1, c = 1のようにローテーションさせる

• 過去の全ての結果を配列に確保してしまう。
– 入力が100万までなので、長さ100万の配列を確保する
– 計算するときは、ar[n] = ar[n-1] + ar[n-2] + ar[n-3]といった感じ

2014/4/5

15


• 注意点
– B問題の答えは、数字が非常に大きくなる！
• Int型やlong型では収まりません

– 答えるべきものは、10007で割った余り
– この時、途中の計算式でも、10007で割った余りを使って
良い
• 最後にだけ計算しようとすると、途中で桁溢れが起きてしまいま
す。

2014/4/5

16


• 出力
– A問題と同じく、答えを出力するだけ
– Print(ar[n])みたいな感じ

2014/4/5

17


• おまけ
– 再帰関数でやると、計算量が膨大になります。
• 動的計画法みたいにやりましょう。
• メモ化再帰でもOK

2014/4/5

18

