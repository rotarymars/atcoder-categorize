
		公式
		
			
				F - Maximum Composition 解説
			
			by MtSaka
			
		
		
		
		
			数列 \(p\) に使われる \(K\) 個の整数を定めたとき、最大値を取るような \(p\) にはどのような性質があるかを考えます。この性質を考える時に、以下の事実が重要になります。


\(f_i(f_j(x))\) と\(f_j(f_i(x))\)  の大小は \(x\) によらない。また、この大小は\(\frac{A_i-1}{B_i}\) と\(\frac{A_j-1}{B_j}\) の大小による。\(\frac{A_i-1}{B_i}>\frac{A_j-1}{B_j}\) ならば \(f_i(f_j(x))>f_j(f_i(x))\)  である。


この性質より、\(p\) に用いられている \(K\) 個の整数を定めたとき、\(\frac{A_{p_1}-1}{B_{p_1}} \geq \frac{A_{p_2}-1}{B_{p_2}} \geq \ldots \geq \frac{A_{p_K}-1}{B_{p_K}}\) を満たす \(p\)が \(f_{p_1}(f_{p_2}(\ldots f_{p_K}(1) \ldots))\) の最大値を取ります。

簡単のため、\(\frac{A_1-1}{B_1} \geq \frac{A_2-1}{B_2} \geq \ldots \frac{A_N-1}{B_N}\) を満たすように \((A,B)\) をソートしたとします。

この時以下の問題に言い換えることができます。


\(1\) 以上 \(N\) 以下の整数からなり、\(p_1 <p_2< \ldots <p_N\) を満たす \(p\) を取ったとき、\(f_{p_1}(f_{p_2}(\ldots f_{p_K}(1) \ldots))\) としてありえる最大値を求めよ。


この問題は以下のような dp で求めることができます。

\(dp_{i,j}=( p_K,p_{K-1},\ldots p_{K-i} \)まで定めて、\(p_{K-i} \geq j\) を満たすとき、\(f_{p_{K-i}}(\ldots f_{p_K}(1)\ldots)\) としてありえる最大値)

具体的に、各遷移は \(dp_{i,j}=\text{max}(dp_{i,j+1},A_j \times dp_{i-1,j+1}+B_j)\) となり、求めるべき答えは \(dp_{K,1}\) です。

状態数は \(O(NK)\) で遷移は \(O(1)\) であるため、全体で時間計算量 \(O(NK)\) でこの問題を解くことができます。

実装例(C++):



実装例(Python):



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
