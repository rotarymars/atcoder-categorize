
問題概要
• 風船が 𝑁 個ある。
• 風船 𝑖 は最初に高度 𝐻𝑖 にあり、秒速 𝑆𝑖 で上昇する。
• 1 秒おきに風船を割っていくとき、一番上がった風船の高さ (ペナル
ティ) として考えられる最小値はいくらか。
• 1 ≦ 𝑁 ≦ 100,000
• 1 ≦ 𝐻𝑖 ≦ 1,000,000,000
• 1 ≦ 𝑆𝑖 ≦ 1,000,000,000

考察
• 単に高さ順に割る、速度順に割る、ではうまくいきません。
• 風船を割る順番をうまく決定するアルゴリズムが欲しいです。
• 実は、この問題は最小化問題としてそのまま考えるのは大変で、最
小化問題の代わりに、ある高さ X 以下を保ちながら風船を割ること
ができるか、という判定問題に変形することで効率的にとくことがで
きるようになります。

部分点解法 (30点)
• 越えてはならない高さ X が定まっているとします。
• このとき、風船 𝑖 は (𝑋 − 𝐻𝑖 )/𝑆𝑖 秒以内に割らなければならないとい
うことが分かります (もしも 𝑋 < 𝐻𝑖 なら、この X では不可能であるこ
とが分かります)。

部分点解法 (30点)
• 各風船をいつまでに割らなければならないかが分かったならば、実
際に割る方法があるかを判定する際、貪欲法を用いることにより判
定することができます。
• 具体的には、いつまでに割るかの制限時間が短い風船を優先して
割るという貪欲法です。
• 部分点解法では風船の個数が少なく、X の候補は およそ 200,000
通りしか無いので、部分点を得ることができます。

満点解法(30+70点)
• この問題のすべてのテストケースについて考えた場合、風船の高さ
として考えられるものがとても多く、すべての X を仮定することができ
ません。
• 実は、ある値 Opt を基準として、
・ Opt > X ならば、どうやっても達成できない。
・ Opt ≦ X ならば、先ほどの貪欲法アルゴリズムで達成できる。
という性質が成り立ちます。
• この Opt の値が、求める答えとなります。

満点解法(30+70点)
• この性質をみたすような場合に Opt を求める際、二分探索を用いる
ことができます。
• 例えば、区間 [left,right] (left≦right) の内部に Opt がある
(left≦Opt≦right) とわかっている場合に、left≦half≦right となる half
を考え、
X=half が条件を満たす→ Opt は区間 [half,right] 内にある。
X=half が条件を満たさない→ Opt は区間 [left,half) 内にある。
として区間を狭めていくという方針です。
• half は (left+right)/2 辺りの整数を取ることが多いです。

満点解法(30+70点)
• X を定めたときに、制限時間でソートして判定するので、全体で
O(𝑁log𝑁 ∗ log(𝐻 + 𝑁𝑆)) (ただし 𝐻, 𝑆 はそれぞれ、開始時高度の最
大値、速度の最大値) となります。
• この解法ならば満点を得ることができます。

備考
• 制限時間でソートする際、後の判定で制限時間が 𝑁 秒以上である
風船は一律制限時間が 𝑁 秒であるとしても良い (なぜなら、どの風
船も 𝑁 − 1 秒以内に割られるようにできるため) ので、0 以上 𝑁 以
下の整数値をソートする問題となります。
• これはビンソートを用いることにより O( 𝑁 ) で実現することができます。
• 計算量は O(𝑁log(𝐻 + 𝑁𝑆)) になります。


