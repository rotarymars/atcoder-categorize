1. 問題概要
2. アルゴリズム

2014/6/21

©AtCoder Inc. All rights reserved.

9


• 文字列が与えられる。
• 先頭文字を大文字に、残りを小文字に変換しなさい。
• 制約
• 1 ≦ |S| ≦ 12

2014/6/21

10


• 入力
– 文字列Sを受け取る
• 解らない場合はpracticeで確認しよう！
– http://practice.contest.atcoder.jp/tasks/practice_1

2014/6/21

11


• 処理
– 先頭文字を大文字に変換する
– 残りの文字を小文字に変換する

– やるべき処理は2つ。
• 今見ている文字が、大文字か小文字か確認する。
• 必要であれば、大文字を小文字に変換する、または小文字を大
文字に変換する

2014/6/21

12


• 大文字、小文字の確認
– 言語の標準ライブラリについている場合もある。
• isLowerなど。

– ついていない場合は、文字コードを利用しよう！
• If(c >= ‘a’ && c <= ‘z’)などで、小文字かどうかを判定できる。
• ASCII文字コード表 http://e-words.jp/p/r-ascii.html
– ‘A’が65, ‘B’が66, … ‘Z’が90
» よって、’A’以上’Z’以下なら大文字

– ‘a’が97, ‘b’が98, … ‘z’が122
» よって、’a’以上’z’以下なら小文字

2014/6/21

13


• 大文字、小文字の変換
– 標準ライブラリについている場合もある。
• toLowerなど
– そもそもこれがあれば、大文字小文字の確認も要らない。

– 小文字から大文字に変換したい場合
• ‘a’と’A’の差は32、‘b’と’B’の差は32、‘z’と’Z’の差も32
• つまり32を引けば、小文字は大文字になり、32を足せば、大文字
は小文字になる。
– といいつつも、連続していることさえ分かれば、数字を覚える必要は
全くない
» C = (C + ‘A’ - ‘a’); 大文字への変換
» C = (C + ‘a’ - ‘A’); 小文字への変換
» ‘A’と’a’の差さえ分かれば計算可能なので、上のように書ける

2014/6/21

14


• 出力
– A問題と同じく、答えを出力するだけ
– Print(S)みたいな感じ

• 注意点
– 多くの言語では、string型の文字列を直接一字一字変換
することは出来ない！
• 答えを求めるために、新たにstring型を作っておいた方が良い！

– Char型の配列であれば、これは気にしないで良い。

2014/6/21

15

