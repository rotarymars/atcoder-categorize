1. 問題概要
2. アルゴリズム

2014/6/21

©AtCoder Inc. All rights reserved.

16


• Nから、1,2,3のどれかを100回まで引ける。
• Nを0にできたらクリア。
• NG数字が3つ与えられ、NがNG数字に一度でもなっ
たらダメ。
• クリア可能かどうかを判定しなさい。
• 制約
– 1 ≦ N, NG1, NG2, NG3≦ 300
• NがNG数字と一致することがあることにも注意！
» ジャッジ解これでバグってました、ごめんなさい＞＜

2014/6/21

17


• まずは全探索を考えてみる。
– 100回、1,2,3のどれかを引くことを試みる。
– 3つの分岐が100回。計算回数は3^100回ほどになる。
• 地球が爆発するまで待っても間に合わない！

– よって、何か工夫する必要がある。

2014/6/21

18


• ダメなケースを考える
– N以下のNG数字が3連続続いている場合
• N=8, NG= {2,3,4}など

– Nが大きく、NG数字が邪魔をして、1回じゃ間に合わない
場合
• N=300, NG={297,294,291};
– 300->298の時点で、あと99手で減らせる最大数は297なので、間に
合わない。

– これらを場合分けするのは非常に大変！
» 無理ではない。が、やりたくない。

• できれば全探索したい。

2014/6/21

19


• 解法1 動的計画法を使った解法
– 全探索は難しいので、全探索を上手くまとめてあげる。
• 数字kに辿り着くまでに、最低何手必要かを、上手く処理してあげ
る。

– dpをINFで初期化;
– dp[N] = 0;
– For i : N to 0
• If(NG(i)) continue;
• For j: 1 to 3
– dp[i - j] = min(dp[i] + 1, dp[i – j]);

– こんな感じで上から処理してあげる。
– dp[0]が100以下ならYES、そうでないならNO
2014/6/21

20


• 解法2 貪欲法を使った解法
– そもそも、もし3を引いても大丈夫な時に、2や1を引く必要
があるのか？
• 2を引いて行ける範囲は、3を引いて行ける範囲より狭い。
• 1も同様

– よって、引ける数のうち、もっとも大きい数を引けば良い。
– これを100回繰り返して、Nが0以下になっていればYES

2014/6/21

21


• 注意点

Nが最初からNG
数字な時に注
意しよう！！！
2014/6/21

22

