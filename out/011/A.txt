1. 問題概要
2. アルゴリズム

2014/6/21

©AtCoder Inc. All rights reserved.

3


• 今月の月を表す整数Nが与えられる
• 来月は何月か出力
• 制約
• 1 ≦ N ≦ 12

2014/6/21

4


• 基本的なプログラムの流れ
– 標準入力から、必要な入力を受け取る
• 今回の場合は、 N という1つの整数

– 問題で与えられた処理を行う
• 今回は、Nから、来月の値を算出

– 標準出力へ、答えを出力する

2014/6/21

5


• 入力
– 1つの整数を、標準入力から受け取る
• Cであれば、scanf(“%d”, &N); など
• C++であれば、cin >> N;
• 入力の受け取り方は、下記の練習問題に記載があります。
– http://practice.contest.atcoder.jp/tasks/practice_1

2014/6/21

6


• 処理部分
– 今回は、与えられた整数が表す月の、次の月を計算する
– 計算方法は色々
• オーソドックスな方法
– まず、Nに1を足す。
– Nが13になってしまったら、Nを1にする

• ちょっと器用な方法
– N %= 12; N += 1;
– 12で割った余りを計算すると、12月が0月っぽくなる。
» こっちの方がかっこいいから個人的に好きだけれども、別にこんなこと
しなくても良い。

• 1を足すが思いつかなかった人用
– 配列に来月の月の番号を全部書いちゃう。
– Int[] nextMonth = new int[]{-1, 2,3,4,5,6,7,8,9,10,11,12,1};
– おすすめはしません。
2014/6/21

7


• 出力
– 求めた答えを、標準出力より出力する。
– 言語によって違います。
• printf(“%d¥n”, N); (C)
• cout << N << endl; (C++)
• System.out.println(N); (Java)
• 各言語の標準出力は、下記の練習問題に記載があります。
– http://practice.contest.atcoder.jp/tasks/practice_1

2014/6/21

8

