色の塗り方と移動経路を決める順番は答えに影響しません。そこで、移動しながら塗り方を決める
ことで、bool 値のテーブルを持つことを考えます。

DP [i][j][k] = マス (i, j) までの経路の偏りが k になることがあるか？
マス (i, j) で偏りが k であるとき、マス (i + 1, j) での偏りは、マス (i + 1, j) の数の色の塗り方によ
り k + |Ai+1,j − Bi+1,j | か |k − |Ai+1,j − Bi+1,j || となります。マス (i, j + 1) についても同様です。
したがって、i, j が小さい方から順にテーブルを埋めていくことができます。

M = max{|A11 − B11 |, ..., |AHW − BHW |} として、偏りは最大で O((H + W )M ) 程度まで考慮
する必要があるので、全体で O(HW (H + W )M ) で解くことができました。なお、計算の順序を工
夫することで空間計算量 O(min{H, W }(H + W )M ) で解くことや、bitset を用いた高速化をするこ
ともできます。

5

The answer is independent from the order of deciding colors to paint and the path. So let’s
consider holding a bool table by deciding colors while moving.
DP [i][j][k] = Can the unbalancedness of a path to square (i, j) be k?
If the unbalancedness at square (i, j) is k, then unbalancedness at square (i + 1, j) is either
k + |Ai+1,j − Bi+1,j | or |k − |Ai+1,j − Bi+1,j ||, depending on how to paint the numbers of square
(i, j). The same is true for square (i, j + 1). Therefore, you can ﬁll the table in the increasing
order of i, j.
Let M = max{|A11 − B11 |, ..., |AHW − BHW |}, then you have to consider a maximum unbalancedness of O((H + W )M ), so it can be solved in a total of O(HW (H + W )M ) time. If you
choose good order of calculation, you can solve in a total of O(min{H, W }(H + W )M ) space.
You can also accelerate the solution using bitset.

11

