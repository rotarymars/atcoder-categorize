
		公式
		
			
				E - Remove Pairs 解説
			
			by MtSaka
			
		
		
		
		
			場にあるカードの集合としてありえるものは \(2^{N}\) 通りです。
この全ての場合について、それが先手が操作をする直前の時に場にあるカードの集合であったときに先手が勝つか後手が勝つか判定することができれば良いです。

これはいわゆる bitDP というテクニックを利用して解くことができます。
\(dp[S]\) = 場にあるカードの集合が \(S\) の状態で先手から始まる時に先手が勝つことができる時 true そうでない時 false
とし、遷移は以下の通りです。


カードの集合 \(S\) について、ある \(i,j \in S\) で\(A_i=A_j\) または \(B_i=B_j\) を満たす \(i,j\) について \(dp[S \setminus \{i,j\}]\) が falseである時に \(dp[S]\) は true、それ以外の場合では \(dp[S]\) はfalse


最終的に答えは、\(S=\{1,2,\ldots,N\}\) の時の \(dp[S]\)が trueである時に Takahashi、falseである時に Aokiとなります。

状態数は \(O(2^{N})\) で遷移は \(O(N^{2})\) であるため、計算量は \(O(2^{N} {N}^{2})\) となり、十分高速です。

実装例(C++):



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
