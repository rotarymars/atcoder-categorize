問題
• 木に1つの辺を追加するとき，できるループの大きさを出力．

部分点解法
• 与えられる追加辺(a,b)について，aを始点，bを終点とし探索(幅優先探索で
も深さ優先探索でも)して得た経路長に+1したものが答え(探索時，追加辺は
考慮しない)

• 満点解法
• LCAを用いて，a↔b間の最短距離を求めた上で+1したものを出力すればよい
• →詳しくは次ページ

• 満点解法
• LCAを用いる
• 与えられるグラフを，適当な頂点(どこもいい)を根とした根付き木として扱う．
• この根付き木について，全ての頂点の深さとその親を配列に格納しておく
(ただし根の深さは0で親はいない) ．
• LCA(最小共通祖先)と呼ばれるものを高速に計算する．
• LCAとは，2つの頂点の共通の祖先(親を巡ってたどり
着ける頂点)で最も近いもの

• それぞれの頂点について，2^k個前の親を予め計算して保持しておく(テーブ
ルをつくる) いわゆるダブリング
• ある頂点xの2^k(k>0)個前の親 =
{xの2^(k-1)個前の親}の2^(k-1) 個前の親
(存在しない場合は場合分け)
• ということを利用するとこれらはkが小さい場合から全頂点について
逐次計算していけば求まる
• そして，LCAを求める際にそのテーブルを用いる．
• 具体的には頂点a,bのLCAを求めるとき，
①aとbが同じ深さになるまで片方を登らせた上で，
② 2者が衝突しないギリギリの高さまで2者を登らせる
を求める(①と②の操作はどちらもテーブルを利用してlog nで可能．)

視覚的な例
①aとbが同じ深さになるまで片方を登らせた上で，
② 2者が衝突しないギリギリの高さまで2者を登らせる

①aとbが同じ深さになるまで片方を登らせた上で，
② 2者が衝突しないギリギリの高さまで2者を登らせる

• これらをO(log n)で行う
• 詳しくは正解者のコードを見ると良さそう(すみませんまだかけてませ
ん…)．
• 出力すべきは(aの深さ) + (bの深さ) – (aとbのLCAの深さ) + 1


