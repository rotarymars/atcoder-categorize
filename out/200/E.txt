
		公式
		
			
				E - Patisserie ABC 2 解説
			
			by physics0523
			
		
		
		
		
			この問題の解き方には色々な方針がありますが、そのうちの \(1\) つを紹介します。

まず、「綺麗さ」+「おいしさ」+「人気度」\(=X\) とし、 \(3\) 以上 \(3N\) 以下の各整数 \(k\) について、 \(X=k\) であるようなケーキがいくつあるかを求めます。
これは、 \(\{1,2, \dots , N\}\) から整数を \(1\) つ選ぶということを \(3\) 度繰り返し、選んだ整数の総和が \(k\) となる場合の数はいくつか、という問題の答えと一致します。
この問題は、dp[何回整数を選んだか][総和]={場合の数} という形の動的計画法で解くことができます。これを愚直に実装すると \(O(N^2)\) となってしまいますが、 \(dp[i][j]\) の遷移先が \(dp[i+1][j+1],dp[i+1][j+2], \dots dp[i+1][j+N]\) という区間になるので、累積和によって \(O(N)\) に高速化できます。

これにより、左から \(K\) 番目のケーキの \(X\) の値が分かりました。そこから先は、そのケーキの「綺麗さ」の値を仮定する \(O(N)\) のループによりこの問題を解くことができます。
具体的には、あるケーキの \(X\) の値と「綺麗さ」の値がわかれば、とりうる「おいしさ」の値はひとつの区間をなすので、その区間を「綺麗さ」ごとに求めていくようなループになります。詳しくは実装例も参照してください。

以上より、この問題を \(O(N)\) で解くことができました。

C++による実装例:



BONUS! この問題は、もう少し大きな制約でも解くことも、たくさんのケーキに対する問い合わせが来るような問題を解くこともできます。是非、いろいろな解法を検討してみてください。

		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
