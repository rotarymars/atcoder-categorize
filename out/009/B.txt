心配性な富豪、
ファミリーレストランに行く。

問題
ファミレスのメニューに N 種類の料理があり、
それぞれの料理の値段がわかっている。
2 番目に高い料理の値段はいくらか？
制限
1 ≦ N ≦ 100
すべての料理の値段が同じであることはない。

この問題で必要なこと
・配列、リスト等の基本的な取り扱い
・ソート（整列）の方法
配列の基礎については、
またもや過去スライドをチェック！
http://www.slideshare.net/chokudai/abc004

ソートとは……
配列などの要素を、ある順番に従って並び替える
たとえば [51, 39, 66, 42, 10] という配列を
昇順（小さい方から順番）にソート
→

[10, 39, 42, 51, 66]

降順（大きい方から順番）にソート
→

[66, 51, 42, 39, 10]

アルゴリズムやプログラミングの本では
たくさんのソートアルゴリズムが紹介されている
挿入ソート、選択ソート、バブルソート、クイックソート、マージソート、…

アルゴリズムやプログラミングの本では
たくさんのソートアルゴリズムが紹介されている
挿入ソート、選択ソート、バブルソート、クイックソート、マージソート、…

しかし実際にソートをしたいときにこれらを
自分で実装する必要は（ふつうは）ない。なぜか？
→言語の標準ライブラリに入っていることが多い！
もちろん、ソートアルゴリズムを学んだり、同じ目的のアルゴリズムでも手法に
よって計算量などの特徴が違うことを理解したりするために、自分で色んなソー
トアルゴリズムを調べて実装してみるのはよいこと。

各言語のライブラリまで全部説明はできないので……
!

!

!

Python

ソート

!

各自で調べましょう！

値段が高い順にソートして、
その 2 番目を見るだけでは？

値段が高い順にソートして、
その 2 番目を見るだけでは？
ダメです

値段が 100 円、200 円、300 円、300 円のとき
2 番目に高いのは 200 円（300 円ではない）
問題文にもちゃんと書かれていました

値段の配列を
!

10 50 90 50 80 90 30

値段の配列を
!

10 50 90 50 80 90 30

とりあえず降順にソートして
90 90 80 50 50 30 10

値段の配列を
!

10 50 90 50 80 90 30

とりあえず降順にソートして
90 90 80 50 50 30 10

1番高い料理たち

2 番目に高い料理
これが知りたい

値段の配列を
!

10 50 90 50 80 90 30

1番高い料理たちの次に出てくるものを求めればいい！
とりあえず降順にソートして
90 90 80 50 50 30 10

1番高い料理たち

2 番目に高い料理
これが知りたい

今回も擬似コードにしてみると、こんな感じ:
# N は料理の種類数
# A は値段の配列
X ← sort(A)
for i = 0 to N - 1
if X[i] != X[0]
answer ← X[i]
break

# A を降順にソートする
# 先頭から順に見ていく
# 1 番高い料理でないなら
# それを答えにして
# ループを抜け出す

値段が高い順にソートして、
その 2 番目を見るだけでは？
この考えはそのままではダメだった。

値段が高い順にソートして、
その 2 番目を見るだけでは？
この考えはそのままではダメだった。
しかし、
同じ値段の料理がない時にはこれでもうまくいく！

なら、同じ値段の料理をなくしてしまえばいい！
!

!

10 50 90 50 80 90 30

10 50 80 90 30

先にこういった処理を行っておけば、
降順ソートして 2 番目を見るだけで OK

標準ライブラリにある言語も多いはず
!

!

!

!

Ruby

重複

削除

