一般に、A + B は A XOR B 以上になります。これらの値が一致する条件は、A, B を 2 進数表記した際、
「どちらの数についても 1 であるような桁」が存在しないことです。逆にそのような桁が存在した時、A + B
では繰り上がりが発生し、XOR では発生しないため、A + B の方が真に値が大きくなります (そしてその差
を打ち消すことは出来ません)。
この考察を元に桁 DP をすることを考えます。

• dp1[k] := A および B の値の上から k 桁目までを確定させ、その時点で既に A + B が L 以下であるこ
とが分かっているような値組 (A, B) の個数

• dp2[k] := A および B の値の上から k 桁目までを確定させ、その時点ではまだ A + B が L 以下になる
かどうか分かっていないような値組 (A, B) の個数
として定義します。この時、dp*[k − 1] から dp*[k] を計算するには、k 桁目を 0 にするか 1 にするかの 2 通
りの遷移を考慮します。k 桁目を 0 にする場合、A および B の k 桁目はどちらも 0 でなければなりません。

k 桁目を 1 にする場合には、(0, 1) および (1, 0) の 2 通りの遷移が考えられます。この時、dp2 に関しては、k
桁目を確定させた際に A + B が L を超えてしまわないよう、慎重に計算を行う必要があります。
以上のように、L を文字列だと見做して、O(|L|) で解くことができます。



