障害物の無いマス全てに対し、照らされるマスを for ループで数えようとすると、障害物が存在しないとき
に最悪計算量が O(HW (H + W )) となってしまい、これでは時間内に答えを求めることができません。
ただし、照らされるマスを数えるのにいくつかの補助的な前計算を活用することで、それぞれのマスに明か
りを設置した時に照らされるマスの個数を定数時間で求められるようになり、こうすれば O(HW ) で答えを
求めることができます。
まず、前計算として必要なものは、

• L[i][j]: i 行目 j 列目に明かりを置いた時にそこから左方向に照らされるマスの個数 (i 行目 j 列目の
マスを含む)

• R[i][j]: i 行目 j 列目に明かりを置いた時にそこから右方向に照らされるマスの個数 (i 行目 j 列目の
マスを含む)

• D[i][j]: i 行目 j 列目に明かりを置いた時にそこから下方向に照らされるマスの個数 (i 行目 j 列目の
マスを含む)

• U [i][j]: i 行目 j 列目に明かりを置いた時にそこから上方向に照らされるマスの個数 (i 行目 j 列目の
マスを含む)
の 4 つです。
例えば、L[i][j] の要素は次のように計算できます。

• i 行目 j 列目に障害物がある時は、L[i][j] = 0。
• そうでないとき、j = 1 ならば、L[i][j] = 1。
• そうでないとき、j > 1 ならば、L[i][j] = L[i][j − 1] + 1。
これらを 4 方向に対して計算した後、i 行目 j 列目のマスに明かりを置いた時に照らされるマスの総数は、

L[i][j] + R[i][j] + D[i][j] + U [i][j] − 3 と求められます。(これら 4 つの値はどれも i 行目 j 列目のマスを含
んでいるので、重複を消すために 3 を引いています。)

1

