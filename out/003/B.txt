• 二つの文字列が与えられる。
• 各文字列の@という文字を、a,t,c,o,d,e,rのど
れかに変換することが出来る。
• 二つの文字列を同じに出来るか答えなさい。

• １文字ずつ順番に比較する
– 同じ文字ならOK
– 違う文字でも、片方が’@’、片方がatcoderのどれ
かならOK
– それ以外のパターンが一つでもあったらNG

• 全ての文字についてOKならwinを、そうでない
ならloseを出力する。

• 文字列2つを読み取る
• 文字列の長さだけループを回す
– 各文字について、等しいかどうかを調べる
– 等しくない場合、片方が@、片方がatcoderのどれ
かになっているか調べる
– どちらの条件も満たさなかった場合、フラグを立
てる

• フラグが立っていたら、loseを出力する
• 立っていなかったら、winを出力する

• 等しくない場合、片方が@、片方がatcoderのどれか
になっているか調べる
• この処理が非常に難しい！
• 手抜き実装方法が存在する？

– お勧め手抜き実装方法、連想配列を使おう！
• @が10点、atcoderの全ての文字を1点、それ以外の文
字を0点になるような、連想配列を用意する。
• 二つの文字の点数の和が11点を超えていればOK!
• @が1個、atcoderのどれかの文字が1個必要となる。
– 各言語の連想配列はググって調べよう！

• a,t,c,o,d,e,rを全て’@’に変換してしまう
– 例：aoki → @@ki
– これは、いくつかのパターンで間違ってしまう
• 例: aとc → @と@になってしまい、同一判定に

• @を全通り試してしまう
– 全て@な時に計算時間が膨大になってしまう

