• R×Cの部屋が与えられる
• デスクがD個、サーバーラックがL個配置され
ている
• これらを出来るだけ小さな長方形で囲むと、
X×Yの長方形となった。（回転不可）
• デスクとサーバーラックの配置として、あり得
るパターンを全て求めなさい。

• まず全通り試す場合を考える。
• 各マスにLを置く、Dを置く、何も置かないの3
通り。
– 3^(R*C)通りあるので、絶対に間に合わない。

• 他の全通り試す方法もあるが、いずれも計算
時間が膨大にかかってしまう。

• X*Yの領域が残っているのだから、X*Yの取り
方をまず考える。
– これは、探索でも数学的な計算でも簡単に求まる。

• その後、X*Yの空間の中に、デスクとサー
バーラックの置き方が何通りあるか調べる

• R,C=3 X,Y=2 D=2 L=2の時
– 部屋に、サーバーラックとデスクを詰め込むス
ペースの組み合わせは4つ

• R,C=3 X,Y=2 D=2 L=2の時
– 赤いスペースの中に、デスクとラックを置く組み合
わせは6通り

D

D

D

L

D

L

L

D

L

D

L

L

L

L

D

L

L

D

D

L

L

D

D

D

• R,C=3 X,Y=2 D=2 L=2の時
– 全てのパターンは、6*4で24通りとなる。
– こんな感じで求められるかをこれから考える。

６通り

６通り
６通り

６通り

• X*Yの数の求め方を考える。
– 横にずらせる個数は、R-X個なので、横の配置場
所はR-X+1個。
• 今回の場合は、R=3、X=2なので、R-X=1個だけ右にず
らすことが出来る。よって、2か所に置くことが出来る。

– 縦にずらせる場所も同様に求まる。
– よって、単純な掛け算で求まる。

• もう少し図解
– 横には２か所配置可能

– 縦にも２か所配置可能

• 次に、デスクとサーバーラックの配置方法を
考える。
– 4つのスペースに、2つのサーバーラックと2つの
デスクを配置する。
– これは、組み合わせの個数4C2を求めてあげれ
ば良い。
• 4C2は6なので確かに正しい！
D

D

D

L

D

L

L

D

L

D

L

L

L

L

D

L

L

D

D

L

L

D

D

D

• ここまでの手順
– まずは、使う領域を求める
• これは単純な掛け算で求めることが出来る。

– 次に、領域内のデスクとサーバーラックの置き方
を求める
• これも単純な組み合わせで求めることが出来る。

– これらを掛け算すれば、答えが求まる！
• 本当に？

• 問題文より
• 1000000007=109+7 で割った余りを求めるプログラムを
書いてください。

– これは、非常に大きな数字が発生してしまうこと
があるかもしれないことを表す。

– それぞれの計算について、大きな数字が発生す
るかどうか確かめる必要がある。

• 使う領域を求める計算
• 30以下の数字の掛け算を2回行うだけなので、大きな数
にはならない。

– サーバーラックとデスクの組み合わせを求める計算
• 最大マス数は30×30 = 900
• デスクが半分の450個とする。
• 求める組み合わせ900 C 450は非常に大きい！
– Mod=1000000007で割ったあまりを求めてあげなければならない。

• 使う領域を求める計算
• 30以下の数字の掛け算を2回行うだけなので、大きな数
にはならない。

– サーバーラックとデスクの組み合わせを求める計算
• 最大マス数は30×30 = 900
• デスクが半分の450個とする。
• 求める組み合わせ900 C 450は非常に大きい！
– Mod=1000000007で割ったあまりを求めてあげなければならない。

• 組み合わせの求め方
– 900C450を普通に計算すると、900*899*888*….
• 非常に大きな数になってしまう！

– だが、途中で余りを計算すると、割り算が発生す
るため、上手く数字を求めることが出来ない。
– 少し特殊な求め方が必要。

• パスカルの三角形を使おう！
– http://ja.wikipedia.org/wiki/%E3%83%91%E3%82
%B9%E3%82%AB%E3%83%AB%E3%81%AE%E4%B
8%89%E8%A7%92%E5%BD%A2
画像はwikipedia上記ページより引用

• パスカルの三角形を使おう！
– 0から数えて、i列目のj番目の数字が、I C jに対応
している。
– 足し算しか使わずに求めることが可能なので、あ
まりも求められる。

• 組み合わせの求め方(特殊)
– 特殊な方法なので、興味がある人だけどうぞ。

– 900C450を普通に計算すると、膨大な数字になる
• 余りを求めた状態でも、割り算が出来れば問題はない

– mod109+7に対する逆元さえ求めることが出来れ
ば、割り算相当の演算を掛け算で求めることが出
来る。
• 109+7は素数なので、フェルマーの小定理などが使え
る

• 最終的な手順
– まずは、使う領域を求める
• これは単純な掛け算で求めることが出来る。

– 次に、領域内のデスクとサーバーラックの置き方
を求める
• これも単純な組み合わせで求めることが出来る。
• 組み合わせの求め方は、パスカルの三角形を使用す
る。

• 今までの方法では、上手くいかないケースが
出てしまう。
• 左はＯＫ 右がＮＧ
– 上下左右の壁に、ぴったりくっついてるパターン
だけ取り出さなければならない
D
L

L
D

D

D

L

L

• 「壁にぴったりくっついてるケース」だけを計算
することは、非常に難しい。

• 「壁にぴったりくっついていないケース」を引
いてあげることで、上手く求めることが出来る。
– 「包除原理」と呼ばれる手法！

• 包除原理とは？
– 赤い領域を求めたいとする

• 包除原理とは？
– まずは１つの円に対しての領域を足し算する

• 包除原理とは？
– 次に、2円の共通部分の領域を引く

• 包除原理とは？
– 最後に、3円の共通部分の領域を足す
– これで求めたい領域が求まる！
• 確認してみよう！

• これは、4つ、5つ、6つに拡大しても、同じよう
なことが出来る。
– 奇数個の共通領域を足して、偶数個の共通領域
を引くだけ。
– 詳しくは包除原理の解説サイトなどを見てみよ
う！

• 今回のケース
– XY領域のもっとも上の列を使っている、いない
– XY領域のもっとも左の列を使っている、いない
– XY領域のもっとも下の列を使っている、いない
– XY領域のもっとも右の列を使っている、いない

• 以上4パターンに対して、包除原理を適用して
あげれば良い。

• まずは全領域を足す

• 次に１辺だけ使っていないのを引く
– これの繰り返しで求まる！

– わかんなかったら@chokudaiまで！
• ぶっちゃけ間に合いませんでした＞＜


