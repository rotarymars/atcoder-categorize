
		公式
		
			
				C - Cards Query Problem 解説
			
			by cn449
			
		
		
		
		
			以下、この解説では \(i\) 番目の形式のクエリをクエリ \(i\) と表記します。
配列 \(box_1, box_2, \ldots, box_N\) および \(card_1, card_2, \ldots, card_{200000}\) を持っておきます。\(box_i\) では箱 \(i\) に入っているカードの多重集合、\(card_i\) では \(i\) が書かれたカードが入っている箱の番号の集合を管理します。
クエリ \(1\) では \(card_i\) に \(j\) を追加し、\(box_j\) に \(i\) を追加します。これは各クエリ \(\mathrm{O} (1)\) で行えます。
クエリ \(2\) では問われている対象（具体的には、\(box_i\)）に対し昇順に sort をし出力、クエリ \(3\) ではそれに加えて重複要素の削除を行えばよいです。これは出力する数の個数の合計を \(S\) とするとすべてのクエリで合わせて \(\mathrm{O} (S\log S)\) で行うことができ、\(S \leq 200000\) より十分高速です。
クエリ \(1\) のたびに sort を行うと TLE になることに注意してください（例えば、1 1 1 というクエリがたくさん与えられる状況などを考えてください） 。

実装例



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
