S に操作を繰り返してできる文字列は、(’a’ から ’z’ の) アルファベットとアルファベットを 1 対 1 対応さ
せた置換表 (変換表) に従って S の各文字を置換したもののみです。ここで 1 対 1 とは、異なるアルファベッ
トは異なるアルファベットに置換されることを指します。すなわち、例えば ’a’ が ’c’ に, ’b’ が ’c’ にといっ
た様に、同じアルファベットに置換されるものが複数存在しません。従って、S から T に変換される 1 対 1
の置換表が作れるかを調べれば良いことになります。置換表の条件は、アルファベット Si はアルファベット

Ti に置換されるといったものなので、
• Si = Sj ならば、Ti = Tj である (同じアルファベットは同じアルファベットに置換される)
• Ti = Tj ならば、Si = Sj である (異なるアルファベットは異なるアルファベットに置換される)
を満たせば、各 Si を Ti に置換するような置換表を作ることができます。ここで、S に出現しない文字が存
在する場合について言及すると、それらを a1 , ..., ak とすれば T に出現しない文字も k 個存在するはずなの
でそれを b1 , ..., bk とすると例えば ai を bi に置換する置換表でうまく置換されることがわかります。
これを愚直に実装すると O(|S|2 ) かかりますが、例えば置換表を表す 26 要素の配列 R, R′ (初期値-1) を
持って、順に

• R[Si ] >= 0 ならば R[Si ] が Ti に等しいことを検査する
• R′ [Ti ] >= 0 ならば R′ [Ti ] が Si に等しいことを検査する
• R[Si ] < 0 ならば R[Si ] := Ti とする
• R′ [Ti ] < 0 ならば R′ [Ti ] := Si とする
を行えば O(|S|) でこの問題を解くことができます。

5

