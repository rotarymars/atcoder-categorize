
問題概要
• 数直線の原点にロボットが置かれている。はじめ、ロボットの幸福度
は 0 である。
• このロボットが命令列 𝑆 を順に実行する。
 M : 正か負の向きに距離 1 だけ移動する。
 + : 今の座標を 𝑥 とすると、幸福度が +𝑥 だけ変化する。
 - : 今の座標を 𝑥 とすると、幸福度が -𝑥 だけ変化する。

• 最終的にロボットは原点に戻っていなければならない。
• 最終的な幸福度の最大値を求めよ。
• 1 ≤ 𝑆 ≤ 105

部分点解法
• 1 ≤ 𝑆 ≤ 1,000 と小さい。
→ 動的計画法

• 𝑑𝑝 何文字目 座標 ≔ (幸福度の最大値) を埋めていく。
• 𝑑𝑝 |𝑆| 0 が答え。
• 𝑂( 𝑆 2 ) で間に合う。

満点解法
• 1 ≤ 𝑆 ≤ 105 と大きいので、動的計画法では間に合わない。
→ もっと速い解法を考える。

• ロボットの正の向きへの移動を > 、負の向きへの移動を < と表すこ
とにする。

考察
• > + < < - > という命令列を考える。
• 幸福度の変化量は
 + ごとに (自分より左の > の個数) - (自分より左の < の個数)
 - ごとに (自分より左の < の個数) - (自分より左の > の個数)

• 見方を変えると
 > ごとに (自分より右の + の個数) - (自分より右の - の個数)
 < ごとに (自分より右の - の個数) - (自分より右の + の個数)

考察
• (自分より右の + の個数) と (自分より右の - の個数) が分かれば、
> または < を選んだときの幸福度の変化量を予言できる！
• 例） M - - M - M + M +
M

-

-

M

-

M

+

M

>

−1

+1

+2

+1

<

+1

−1

−2

−1

+

考察
• 最終的な幸福度を最大化したいので、幸福度が増える向きを貪欲に
選んでいけばいいか？
→ 「最終的にロボットは原点に戻っていなければならない」という条件
を守れない。
M

-

-

M

-

M

+

M

>

−1

+1

+2

+1

<

+1

−1

−2

−1

+

考察
• 最終的にロボットが原点に戻るためには、> と < を同じ回数だけ選ば
なければならない。
• この制約下でできるだけ大きいものを選びたい。

M

-

-

M

-

M

+

M

>

−1

+1

+2

+1

<

+1

−1

−2

−1

+

考察
• この行を昇順にソートすると → [−1, +1, +1, +2]
• 前半分を < に、後ろ半分を > に割り当てる → −1, +1, +1, +2
• +1 + +2 − −1 + +1 = 3 が答え！

M

-

-

M

-

M

+

M

>

−1

+1

+2

+1

<

+1

−1

−2

−1

+

解法
• 命令列 𝑆 の各 M について、
(自分より右の + の個数) - (自分より右の - の個数) を計算し、
配列 𝐴 に格納する。
• 𝐴 を昇順にソートする。
• (𝐴 の後ろ半分の総和) – (𝐴 の前半分の総和) が答え。
• 𝑂( 𝑆 log 𝑆 ) で間に合う。
• なお、バケツソートを用いると 𝑂( 𝑆 )


