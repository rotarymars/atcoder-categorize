
		公式
		
			
				G - Tree Inversion 解説
			
			by MMNMM
			
		
		
		
		
			まず、組 \((v,w)\ (v\lt w)\) がどの \(u\) に寄与するかについて考えます。

\(v\lt w\) より、満たすべき条件は \(u,v\) パス上に \(w\) が存在することです。
これは「\(w\) を取り除いた森において \(v\) が属する連結成分に \(u\) が属していない」と言い換えられます。

適当な頂点を根とした根つき木を考えると、この条件を満たす \(u\) の集合は


ある部分木
ある部分木以外全部


のどちらかの形で表せます。

部分木を固定し、それぞれの形で寄与する組 \((v,w)\) について考えます。

1. 部分木

頂点 \(p\) およびその子孫からなる部分木について考えます。

\((v,w)\) が寄与する頂点 \(u\) がこの部分木と一致するような \((v,w)\ (v\lt w)\) は、次の条件を満たします。


\(w=p\)
\(v\) はこの部分木に含まれない


このような組 \((v,w)\) の個数は、\(w-1-(\)部分木の頂点のうち \(x\lt w\) を満たす \(x\) の個数\()\) として求められます。

2. 部分木以外全部

頂点 \(p\) およびその子孫からなる部分木について考えます。

\((v,w)\) が寄与する頂点 \(u\) がこの部分木以外全部と一致するような \((v,w)\ (v\lt w)\) は、次の条件を満たします。


\(w\) は \(p\) の親
\(v\) はこの部分木に含まれる


このような組 \((v,w)\) の個数は、\((\)部分木の頂点のうち \(x\lt w\) を満たす \(x\) の個数\()\) として求められます。

以上より、部分木と整数 \(q\) に対して \((\)部分木の頂点のうち \(x\lt q\) を満たすものの個数\()\) を高速に求めることができれば、それぞれの寄与を計算することができます。
これは、DFS の行きがけ順と値を平面にプロットすると矩形カウントクエリになります。
DFS の行きがけ順に平面走査を行うことで、列の prefix sum に帰着することができます。
Binary Indexed Tree やセグメント木などを用いることで、高速にクエリを処理することができます。

求めた寄与から答えを計算するには、部分木や部分木以外全部に含まれる頂点に対して定数を加えるような操作が必要です。
これは木上の imos 法や Euler tour などによって実現できます。

実装例は以下のようになります。
この実装では、prefix sum に Binary Indexed Tree を、部分木への加算に木上の imos 法を用いています。



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
