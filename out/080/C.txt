
Shopping Street

店を営業する時間帯の組み合わせは 210 − 1 = 1023 通りなため、これら全ての場合において利
益を計算し、最大値を出力するとよいです。
# include < cstdio >
int N ;
int F [100][14];
int P [100][15];
int main ()
{
scanf ("% d " ,& N );
for ( int i =0; i < N ; i ++)
{
for ( int j =0; j <10; j ++) scanf ("% d " ,& F [ i ][ j ]);
}
for ( int i =0; i < N ; i ++) for ( int j =0; j <11; j ++) scanf ("% d " ,& P [ i ][ j ]);
int res = -(1 < <30);
for ( int b =1; b <(1 < <10); b ++)
{
int cc =0;
for ( int i =0; i < N ; i ++)
{
int c =0;
for ( int j =0; j <10; j ++) if (( b > > j &1)&& F [ i ][ j ]) c ++;
cc += P [ i ][ c ];
}
if ( res < cc ) res = cc ;
}
printf ("% d \ n " , res );
}

2


Shopping Street

There are 210 − 1 = 1023 pattern to decide how to open a shop,so it is good to calculate profit
in every pattern and print the maximum one.
# include < cstdio >
int N ;
int F [100][14];
int P [100][15];
int main ()
{
scanf ("% d " ,& N );
for ( int i =0; i < N ; i ++)
{
for ( int j =0; j <10; j ++) scanf ("% d " ,& F [ i ][ j ]);
}
for ( int i =0; i < N ; i ++) for ( int j =0; j <11; j ++) scanf ("% d " ,& P [ i ][ j ]);
int res = -(1 < <30);
for ( int b =1; b <(1 < <10); b ++)
{
int cc =0;
for ( int i =0; i < N ; i ++)
{
int c =0;
for ( int j =0; j <10; j ++) if (( b > > j &1)&& F [ i ][ j ]) c ++;
cc += P [ i ][ c ];
}
if ( res < cc ) res = cc ;
}
printf ("% d \ n " , res );
}

5

