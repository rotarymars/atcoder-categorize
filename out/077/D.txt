全ての正整数は、1 から始めて、以下の 2 つの操作を繰り返すことで作ることができます。

• 今の数に 1 を足す。このとき、各桁の和は 1 増える。(1 の位が 9 のときはこの限りではあ
りませんが、この問題を解くにあたっては考慮しなくていいことをあとで示します)

• 今の数を 10 倍する。このとき、各桁の和は変わらない。
さて、全ての正整数を頂点とし、以上の操作の「今の数」から「新しい数」に辺をはったグラフ
を考えます。求めるべきは、1 から K の倍数のうちのいずれかへの、このグラフ上での最短経路
長に 1 を足したものです。

2

このままでは頂点数は無限ですが、辺のはられ方を考えれば、各正整数に対応する頂点たちは

modK で同一視できることが分かります。よって、各頂点を modK で同一視した K 頂点のグラ
フ上で、1 から 0 への最短路を求めればよく、これは 01BFS を用いることで O(K) 時間で求める
ことができます。1 の位が 9 の整数に 1 を足す遷移は、最短路のアルゴリズムを思い出せば行き
先の頂点がすでに訪れられていることがわかるので、特別に扱う必要はありません。
なお、01BFS とは、deque (両端キュー) を用意し、コスト 0 の辺の遷移は deque の先頭に、1
の辺の遷移は deque の末尾に要素を追加することによる、幅優先探索のアルゴリズムです。

All positive integers can be obtained by performing the following two types of operations to 1
zero or more times:
• Add 1. By this operation, the sum of digits increases by one (unless the last digit is 9, but
this is not important).
• Multiply the current number by 10. The sum of digits remains the same.
Construct a graph with infinite number of vertices. Each vertex corresponds to a positive
integer. In this graph,
• For each x, we add an edge from x to x + 1 with cost 1.
• For each x, we add an edge from x to 10x with cost 0.
The answer is (the shortest distance from 1 to one of multiples of K in this graph) plus one.
We can compree this graph to K vertices. When x ≡ y (mod K), assume that x and y are
the same vertex. Then, in this graph, the answer is the shortest distance from 1 to 0, plus one.
This can be done in O(K) by 01-bfs (a variant of Dijkstra’s algorithm, when all costs are 0 or
1, you can use a deque instead of priority queue).
Note: Isn’t the trouble with ’9’ important? Suppose that the algorithm above finds an invalid
solution that contains a digit ”10” at position i. However, due to the periodicity of powers of
tens, (when K is comprime to 10) we can find another j such that 10i and 10j are the same in
modulo K, so we can move one digit from i to j. Even when K is not coprime to 10, we can
make it periodic by attaching suﬃcient number of zeroes at the end.

4

