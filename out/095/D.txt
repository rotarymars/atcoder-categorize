中橋君の靴にペンキが塗られていて、通ったところの床にペンキが塗られると想像してください。最終的
に、ペンキが塗られた区間に含まれる寿司をすべて食べることになります。
初期位置を O とし、退店するときにペンキが塗られている区間を円弧 AB とします（O から時計回りに進
んだときに先に到着する方の円弧の端を A とします。なお、円周全体が塗られる場合は最適でないため考え
ません）。点 A と B の片方もしくは両方（即座に退店したとき）が O と一致する場合もあります。すると、
最適な歩き方は、「A まで時計回りに歩き、方向転換して反時計回りに B まで歩いて退店」もしくは「B ま
で反時計回りに歩き、時計回りに A まで歩いて退店」となります。
前者での移動距離は OA + AB = 2OA + OB 、後者での移動距離は同様に OA + 2OB となります。A と

B を定めたとき、OA ≤ OB のとき前者、OA ≥ OB のとき後者の歩き方をするのが最適となりますが、実
はそれを意識する必要はあまりなく、前者の歩き方をすると決めたときの最適解と後者の歩き方での最適解を
別々に求め、よりよい方を答えとするのが単純です。以下では、後者の歩き方での最適解を求めます。前者の
場合も同様に求められます。
解を求めるには、もう一つの観察が必要です: A, B はどちらも、寿司のある位置か初期位置のいずれかであ
るべきです。そうでなければ、含まれる寿司を減らすことなく円弧を縮められるためです。よって、N ≤ 100
の部分点のためのテストセットは、A, B の位置をそれぞれ全探索することで解けます。愚直に実装すれば

O(N 3 ) 時間、v1 , v1 + v2 , ..., v1 + v2 + ... + vN や vN , vN + vN −1 , ..., vN + vN −1 + ... + v1 を事前に計算し
ておけば O(N 2 ) 時間の解法が得られます。

N ≤ 105 の満点用テストセットも、これを少し改善することで解けます。A, B のうちどちらかの位置を全
て試す時間はあるため、ここでは B の位置をすべて試すことにします。B の位置を xb に固定したとき、A
の位置は x1 , x2 , ..., xb−1 のいずれかであり、このうち f (a) := v1 + v2 + ... + va − xa が最大となるような a
に対応する xa を選択するべきです（差し引きの摂取カロリーは、f (a) に vN + vN −1 + ... + vb − (C − xb ) を
加えたものですが、この部分は a に依存せず一定値をとるためです）
。よって、事前に f (0), f (1), ..., f (N ) の
値を求めておき、さらに g(a) := max(f (0), f (1), ..., f (a)) を a = 0, 1, ..., N に対して計算しておけば（g(0)
から順に求めます）
、B の位置を固定したときに直ちに最適な A の位置を選ぶことができ、O(N ) 時間の解法
が得られます。

4

Imagine that his shoes are wet with paint, and he paints the floor where he walks. In the end, he eats
all sushi in the painted segment.
Let the initial place be O, and the painted segment in the end be arc AB (If we walk clockwise from
O, we reach A first. We ignore the case where the whole counter is painted, which is not optimal). Note
that A and/or B may coincide with O. The optimal way to walk is to ”walk clockwise until A, then
turn around and walk counterclockwise until B”, or ”walk counterclockwise until B, then turn around
and walk clockwise until A”.
The distance covered in the first way of walking is OA + AB = 2OA + OB, and OA + 2OB in the
second way. When A and B is fixed, it is optimal to perform the first way if OA ≥ OB, and the second
way if OA ≥ OB, but we actually don’t have to care this too much. We just need to find the optimal
solution when we stick to the first way, and the optimal solution when we stick to the second way, and
take the better one. We will deal with the second way from now on (the first way can be dealt similarly).
One more observation is required to find the solution, both A and B must be a position where a sushi is
placed or O. This is because the arc could be shortened without losing sushi otherwise. Thus, the partial
test set can be solved with trying every possible choice of A and B. This results in an O(N 3 ) time solution
if implemented naively, and O(N 2 ) if v1 , v1 +v2 , ..., v1 +v2 +...+vN and vN , vN +vN −1 , ..., vN +vN −1 +...+v1
are precomputed.
The full test set can be solved with just a little improvement from here. There is enough time to try
every choice of A or B, and we will go with B here. When B is fixed as xb , A is one of x1 , x2 , ..., xb−1 ,
and we should select xa corresponding to a that maximizes f (a) := v1 + v2 + ... + va − xa . (This
is because, the calories taken in is equal to f(a) plus vN + vN −1 + ... + vb − (C − xb ), which has a
constant value independent of a when b is fixed). Thus, if we find f (0), f (1), ..., f (N ) beforehand, and
find g(a) := max(f (0), f (1), ..., f (a)) for each a = 0, 1, ..., N (starting from g(0)), we can immediately
make the optimal choice of A when B is fixed, thus we have an O(N ) time solution.

10

