
		公式
		
			
				E - Duplicate 解説
			
			by  Nyaan
			
		
		
		
		
			はじめに、\(S\) の中で 2 以上の数字が隣り合っている箇所があったら答えは -1 です。
そうでない場合を考えます。たとえば  \(S=\)  1121131 とします。操作を行うごとに S は以下のように変化します。


1121131
111211113
11112111111
11111211111
111111211111
\(\vdots\)


列を観察すると次のような事実が分かります。


末尾に連なる連続した同じ数字 (上の例での 3 や 111111) は長さが 1 ずつ減っていきやがて無くなる。
末尾でない箇所の 2 から 9 は個数が変化しない。
末尾でない箇所の連続する 1 は, 直後の数字の値を \(x\) として \(x-1\) 個ずつ増えていく。
例えば先頭の 11 は, その直後の数字の値が \(2\) なので \(2-1=1\) 個ずつ増える。


この法則のポイントは「同じ数字が連続する列は末尾の要素しか減っていかない」という点です。これを利用することで、\(S\) を連長圧縮 (Run Length Encoding) した列を持ち、連長圧縮した列の末尾を pop しながら \(S\) の文字数・操作回数をシミュレーションするアルゴリズムで解くことができるとわかります。(詳細は実装例を参照ください)
計算量は \(\mathrm{O}(N)\) で十分高速です。


実装例(C++)




		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
