
		公式
		
			
				B - Overlapping sheets 解説
			
			by mechanicalpenciI
			
		
		
		
		
			問題文の制約から、\(0\leq x\leq 100\) かつ \(0\leq y\leq 100\) 以外の領域について考える必要はなく、また、整数の組 \((i,j)\) \((1\leq i\leq 100, 1\leq j\leq 100)\) について、\(i-1\leq x\leq i\) かつ \(j-1\leq y\leq j\) の領域は各シートによって完全に覆われているか全く覆われていないかのどちらかです。よって、次のような問題を解くことを考えれば良いです。


\(100\times 100\) のマス目があり、上から \(i\) 行目かつ左から \(j\) 列目をマス \((i,j)\) とよぶことにします。また、最初の時点で全てのマスは白く塗られているとします。
\(1\leq k\leq N\) の順に、\(i\) 回目の操作では、\(A_k\leq i\leq B_k-1\) かつ \(C_k\leq j\leq D_k-1\) をみたす整数の組 \((i,j)\) について、マス \((i,j)\) を黒く塗ることを行います。
\(N\) 回の操作の後で黒く塗られているマスの個数を求めてください。


これは for 文を用いることによって実際に塗る操作をシミュレーションすることができ、for文とif文を用いて最終的に黒く塗られているマスの個数を数えることで答えを求めることができます。

シミュレーションに必要な計算回数は、愚直に行っても \(N\times (100\times 100)\leq 10^6\) 程度であるため、十分高速にこの問題を解くことができます。よってこの問題を解くことができました。

c++ による実装例:



Python による実装例:



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
