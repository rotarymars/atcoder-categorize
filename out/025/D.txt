
問題概要
• 1 から 25 までの整数を 5×5 の盤面に配置します。
• いくつかの整数はどこに置くか決まっています。
• 縦または横に連続する 3 整数をどのようにとってもそれらが昇順ま
たは降順になっていない置き方は全部で何通りあるか計算してくだ
さい。
• 少なくとも 5 つの整数は置き方が決まっている。

部分点解法 (30点)
• すべての置き方を試します。
• 置き方は 𝑁! 通り (𝑁 は空きマスの個数)あり、それぞれ O(𝑁 2 ) で条
件を満たすかか判定できるので、計算量は O(𝑁 2 ∗ 𝑁!) となります。
• 空きマスが少ないデータセット 1 なら高速で解けますが、空きマスが
多めのデータセット 2 だとかなりの時間がかかってしまいます。

考察
• 1 から順に置いていくことにします。
• この場合、どのような条件が満たされたら良くて、どのような条件が
満たされたらダメなのかを考えてみます。

考察
• 今新たに数を置くときに、上下または左右で隣接するマスについて
考えてみます (ここでは例として左右を考えます、上下も同様に処理
できます)。以下の 4 つの場合が考えられます。
• (A) : 左右のうち一方が盤面の外 (端のケース)
• (B) : 左右のうち両方が空きマス。
• (C) : 左右のうち一方が埋まっている。
• (D) : 左右のうち両方が埋まっている。
(A)

(B)

数

(C)

数

(D)

数

考察
• (A)のケースは、条件に違反することはありません。
• (B)のケースは、今置く数を置いた時点では矛盾しません。真ん中が
最小値です。
• (C)のケースは、後で空いているマスにより大きい数を置くことになる
ので、この時点で矛盾していることが分かります。
• (D)のケースは今置く数を置いた時点では矛盾しません。真ん中が
最大値です。
(A)

(B)

数

(C)

数

(D)

数

考察
• 先ほどの (C) を検出して除外するアルゴリズムだけで、すべての正し
い置き方を列挙することができるのでしょうか?

考察
• 先ほどの (C) を検出して除外するアルゴリズムだけで、すべての正し
い置き方を列挙することができるのでしょうか?
• →これできちんとチェックできます。なぜなら、連続する 3 マスについ
て、それらの大小関係はちょうど 2 個目が置かれたときに定まり、か
つダメなケースでは必ず (C) を経由することになるからです。
• 一方で(C)さえ経由しなければ最後まで置けた配置はいずれも条件
を満たします。

満点解法 (30+70点)
• もちろん先ほどのチェックを導入してもただすべての置き方をそのま
ま試すだけでは、結局 O(𝑁!) 通り見ることになります。

• 重要なこととして、先ほどのチェックに用いたのは、今現在置く数と
の大小関係のみなので、既に置いた数同士の大小関係は覚えなく
ても良いです。
• そのため、既に置いた場所の集合が同じ状態同士を一緒くたにして
計算することができます。

満点解法 (30+70点)
• ここで、bitDP と呼ばれるアルゴリズムを使用することができます。
• dp[i] = 今現在置かれている数字の配置が整数 i で表されるとき、現
時点で矛盾なく置かれている配置の総数。
• i は 25 ビットの非負整数で、盤面をビットで表します (例えば 10 マス
目が埋まっているなら第 10 ビットが 1 でそうでないなら第 10 ビット
が 0)。
j−1 ] ∗ 𝑓(i−2j−1 , j) となります。ただし、ここ
• このとき、dp[i]= 25
dp[i−2
j=1
で 𝑓(i, j) は、i の第 j ビットが 0 であり、状態 i から新たに数を j マス
目においても矛盾しない場合に 1 を、それ以外の場合に 0 を返す関
数とします。また、dp[0]=1 とします。

満点解法 (30+70点)
• 先ほどの bitDP は O(2𝑁 ) の計算量で動作します。
• 𝑁 ≦ 20 なので、データセット 2 でも速く動作します。


