考え方 1
各 i = 1, 2, ..., N について、i 番目の ID カードで全てのゲートを通過できるかを考えます。すると、全て
の j = 1, 2, ..., M について、 Lj ≤ i ≤ Rj であるときに限り i 番目の ID カードで全てのゲートを通過でき
ます。このような i の個数を数え上げることで答えを求めることができますが、このままでは時間計算量が

O(N M ) となり間に合いません。
そこで、各 i について、全ての j について Lj ≤ i ≤ Rj が成り立つかを高速に判定したいです。この条
件は、

i ≥ L1 , L2 , ..., LM
かつ

i ≤ R1 , R2 , ..., RM
と表すことができます。すなわち、

L′ = max{L1 , L2 , ..., LM }
R′ = min{R1 , R2 , ..., RM }
とすると、各条件は L′ ≤ i ≤ R′ と表すことができます。このような i の個数が答えになります。これは

L′ ≤ R′ のとき R′ − L′ + 1、そうでないとき 0 です。時間計算量は O(M ) です。

考え方 2
全ゲートを通過できる ID カードの番号は区間 (連番) になります。また、全ゲートを通過できる ID カー
ドは、M − 1 番目までの全ゲートに通過できる ID カードのうち M 番目のゲートにも通過できるものです。
そこで、i 番目までの全ゲートに通過できる ID カードの番号を li , li + 1, ..., ri とします。すると、li+1 , ri+1
は li , ri から計算できます。初期値も適当に、l0 = 1, r0 = N や l1 = L1 , r1 = R1 とすれば lM , rM を時間計
算量 O(M ) で計算することができます。考え方 1 と同様に、lM ≤ i ≤ rM であるような i の個数が答えにな
ります。

1

