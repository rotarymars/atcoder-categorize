
		公式
		
			
				F - Shiritori 解説
			
			by MMNMM
			
		
		
		
		
			「これまでに使っていない単語の集合」と「最後の文字」のペアを状態に持った DP を行うことでこの問題を解くことができます。


\(\operatorname{dp}[S][c]\coloneqq\) これまでに使っていない単語の集合が \(S\subseteq\{s _ 1,\ldots,s _ N\}\) であり、最後の文字が \(c\) である状態について、その状態から勝てるとき \(1\) 、そうでないとき \(0\)


であるような DP テーブルを考えます。
このとき、この DP テーブルは次のようにして値を決めることができます。

\[\operatorname{dp}[S][c]=\left\{\!\!\begin{array}{cll}1&&({}^\exists s\in S.\;s[0]=c\wedge\operatorname{dp}[S\setminus\{s\}][s[-1]]=0)\\0&&(\text{otherwise})\end{array}\right.
\]

ただし、\(s[0],s[-1]\) はそれぞれ \(s\) の最初の文字、最後の文字を表します。
この式は、「残っている単語のうち、それを言ったら相手を負かせるものがあるとき、かつそのときに限り勝つ」ことを DP の遷移に書き下したものです。

\(\operatorname{dp}[\{s_1,\ldots,s_N\}][c]\) が \(1\) であるような \(c\) が存在すれば高橋くんは勝つことができます。

この DP テーブルを正しく埋めるためには、\(\operatorname{dp}[S][c]\) を計算しようとするより先に \(\operatorname{dp}[S\setminus\{s\}][s[-1]]\) を計算していなければなりません。
この条件はいわゆる bit DP  で用いる方法で \(S\) を \(N\operatorname{bit}\) の整数に変換して昇順に計算を行えば満たされます。

文字の種類数を \(\sigma\) として、状態が \(2^N\sigma\) 通りあり、状態 \(1\) つあたり \(O(N)\) 時間かけて DP テーブルの計算を行うので全体で時間計算量は \(O(2^NN\sigma)\) となります。

実装例は以下のようになります。
ここではワードサイズ \(w\) に対して \(\sigma\lt w\) が成り立っていることを仮定した実装をしています。



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
