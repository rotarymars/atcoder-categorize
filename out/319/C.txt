
		公式
		
			
				C - False Hope 解説
			
			by MMNMM
			
		
		
		
		
			高橋くんが数字を知る順番は \(9!=362880\) 通りあり、この \(362880\) 通りすべてが等しい確率で起こりえます。
よって、この \(362880\) 通りのそれぞれに対して高橋くんががっかりするかどうかを判定することができれば、答えを \((\) がっかりしない数字の知り方の総数 \()/(\) 数字の知り方の総数 \()\) として計算することができます。

がっかりするかどうかの判定は、縦・横・斜めの各列に対して「同じ数字が書かれたマスのペアがあるか」を判定し、存在していれば「同じ数字の \(2\) マスが先に見られたか」をチェックすることで実現できます。

実装例は以下のようになります。
今回の問題のように、すべての順列を探索する際には C++ における next_permutation 関数を用いると便利です。
next_permutation 関数は、与えられた配列の並べ替えを辞書順に並べたとき、与えられた配列の次に来るものを返します。
存在しないとき（\(=\) 与えられた配列が逆順に並んでいたとき）、false を返します。

cout はデフォルトでは小数点以下 \(6\) 桁までしか出力を行わないため、出力の誤差を \(10^{-8}\) 以下にするために設定を変更する必要があることに注意してください。



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
