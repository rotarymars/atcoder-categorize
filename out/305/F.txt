
		公式
		
			
				F - Dungeon Explore 解説
			
			by MMNMM
			
		
		
		
		
			この問題は、得られる情報を使ってもとのグラフ上で DFS（深さ優先探索）を行うことで解くことができます。

次の \(2\) つのことを考えます。


得られる情報だけから DFS を正しく行えること
\(2N\) 回以下の移動で頂点 \(N\) へ到達できること


1. 得られる情報だけから DFS を行えること

DFS を行うためには「隣接している頂点のうちこれまでに訪れたことがない頂点に移動する（存在しなければこの頂点にはじめに訪れたときの直前にいた頂点に移動する）」ことができればよいです。
隣接している頂点の集合は与えられています。
これまでに訪れた頂点の集合の情報と、直前にいた頂点の情報も（自分が訪れた頂点なので）持っています。

よって、この \(2\) つに共通する頂点へ移動することを繰り返して DFS を行うことができます。
持っている情報から次に進むべき頂点を見つけるのは \(O(N)\) 時間で可能です。\(O(N^2)\) 時間使っても十分高速です。

2. \(2N\) 回以下の移動で頂点 \(N\) へ到達できること

もとのグラフの部分グラフとして、DFS で利用される辺のみからなるグラフを考えます。
すると、このグラフは閉路を持ちません（閉路を持つ場合、すでに訪れたことがある頂点に移動していることになります）。
よって、この部分グラフは特に木になっています。
DFS では連結成分の頂点をすべて訪れ、もとのグラフは連結であったので、この部分グラフは全域木です。

ある頂点から DFS を開始し、他の頂点を探索し終えてもとの頂点に戻ってくるとき、すべての辺を \(2\) 回ずつ通ります。
よって、もとのグラフで頂点 \(1\) から DFS を行って頂点 \(1\) に戻ってくるとき、\(2(N-1)\) 回の移動を行います。
これの途中で頂点 \(N\) に到達しているので、示されました。

実装例は以下のようになります。



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
