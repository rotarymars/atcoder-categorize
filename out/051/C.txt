
Back and Forth

まず、点 s = (sx , sy ) から点 t = (tx , ty ) への経路について考えます。問題文の条件より、点 s と点 t を除いた全
ての格子点で交わらない 4 つの経路を見つける必要があります。この条件から、図 1 で示すような点 s = (sx , sy )
と点 t = (tx , ty ) のそれぞれ上下左右に距離 1 進んだ点は必ず訪れる必要があります。そうでなければ、先に述べ
た 4 つの経路の条件に反してしまうからです。
次に、図 1 で示した点 s の周辺の 4 点から点 t の周辺の 4 点への交差しない 4 つの経路を見つけることを考え
ます。このとき、図 2 のような 4 つの経路を見つけることができ、これらの経路は全て最短距離になっています。
なぜなら、s の周辺の 4 点から t の周辺の 4 点へ結ぶ移動は右移動と上移動で行えるからです。あとは、4 つの経
路を合体させ、s → t → s → t → s と移動するような文字列を出力すれば良いです。

t

t

s

s

図 1:

図 2:

C++のコード例

1

int main(void){

2

int sx,sy,tx,ty;

3

cin >> sx >> sy >> tx >> ty;

2

const int dx=tx-sx,dy=ty-sy;

4
5
6

// Path 1

7

cout << string(dy,’U’) << string(dx,’R’);

8
9

// Path 2

10

cout << string(dy,’D’) << string(dx,’L’);

11
12

// Path 3

13

cout << ’L’ << string(dy+1,’U’) << string(dx+1,’R’) << ’D’;

14
15

// Path 4

16

cout << ’R’ << string(dy+1,’D’) << string(dx+1,’L’) << ’U’;

17
18

// EndLine

19

cout << endl;
return 0;

20
21

}

