
2014/4/19

©AtCoder Inc. All rights reserved.

22


• AとBが与えられる
• A以上B以下で桁に4と9を含まない数字を数える

2014/4/19

23


• 禁止された数字か判定された関数を作ることができ
たら愚直にB-A+1回のループを書けばよい
– for(int i=A; i<=B; i++)みたいな感じ。

• 30点が得れる
• ある数字が含まれているかどうかは、ABC006 A問題
でやったばっかり！
– http://abc006.contest.atcoder.jp/tasks/abc006_1
– 解説はこちらから
• http://abc006.contest.atcoder.jp/tasks/abc006_1

2014/4/19

24


• 4,9を含むかどうか
– やり方は何通りか存在する
• nを文字列として持ち、文字4,9を含むか調べる
– Findなどの、文字列検索を行うアルゴリズムを使う
– Forループやforeachなどで1文字ずつ調べても良い

• 1ケタずつ整数として調べる。
– まず、%10を使い、1ケタ目の数字だけ取り出す
– 次に、それが4,9であれば終了し、そうでなければ、/10して次の桁に
移行する。

2014/4/19

25


• 1ケタずつ整数として調べる。
– まず、%10を使い、1ケタ目の数字だけ取り出す
– 次に、それが4か9であれば終了し、そうでなければ、/10
して次の桁に移行する。

• 例えば、1342について調べる
– 1342 % 10 = 2 ←4や9でないので、次の値は10で割って
134
– 134 % 10 = 4 ←4なので終了

2014/4/19

26


• 動的計画法を用いる
• 0～Nに含まれる禁止された数の数をf(N)とする
• A～Bに含まれる禁止された数の数はf(B)-f(A-1)
• f(N)を求めるためには、上位桁から、先行0を認めて
各桁毎に決めていくいわゆる桁DPが有効
• 上位桁から決めていく際に、ある桁で一度未満が確
定したらそれ以降はどんな値を入れても良い
(0～Nだから)
• 状態数は (桁数) *( 既に未満確定したかどうか(2通
り)
• 桁数をNとして、O(N)
2014/4/19

27


• 動的計画法を用いる
• たとえばF(1234)を求めるとき、
1--- → 状態: (1桁目まで確定・未満フラグ: false)
12-- → 状態: (2桁目まで確定・未満フラグ: false)
10-- → 状態: (2桁目まで確定・未満フラグ: true)
108-→ 状態: (3桁目まで確定・未満フラグ: true)
101-→ 状態: (3桁目まで確定・未満フラグ: true)
こう言う感じの状態を考える
2014/4/19

28


