指示を一度行うたびに、人の状態が切り替わる部分を 2 箇所まで潰すことができます。これを踏まえて、連
続して 1 を並ばせる左端を i 番目としたときにいくつ 1 を並べることができるかを考えます。

• Si = 0 のとき: i 番目以降で Sj ̸= Sj+1 となる場所を順に最大 2K − 1 箇所潰すのが最適です。
• Si = 1 のとき: i 番目以降で Sj ̸= Sj+1 となる場所を順に最大 2K 箇所潰すのが最適です。
1 を並べる左端を i としたときの最大値を Xi とすると、答えは max{X1 , X2 , ..., XN } となります。しかし、
これをナイーブに実装しても O(N 2 ) となり間に合いません。
そこで、何かしら工夫する必要があります。まず、i (連続して 1 を並ばせる左端) として、元の文字列で 0
または 1 が連続する始点のみを探索すれば十分です。例えば、”11000...” の 4 文字目や 5 文字目の 0 を左端と
するよりも 3 文字目の 0 を左端とした方が良いでしょう。このような場所を左から順に 1 = i1 < i2 < ... < ir
とします。また、便宜上 k > r なる k について、ik = N + 1 とします。このとき、k = 2, 3, ..., r について、

Sik ̸= Sik −1 です。よって、k = 1, 2, ..., r について、Xik は
• Sik = 0 のとき: Xik = ik+2K − ik
• Sik = 1 のとき: Xik = ik+2K+1 − ik
となり、答えは max{Xi1 , Xi2 , ..., Xir } です。これは、O(N ) で動作します。
別解として、二分探索を使った O(N logN ) の解法や、しゃくとり法を用いた O(N ) の解法もあります。

4


