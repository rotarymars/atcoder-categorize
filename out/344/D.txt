
		公式
		
			
				D - String Bags 解説
			
			by physics0523
			
		
		
		
		
			結論から言うと、この問題は動的計画法 (DP) により正解できます。

\(dp[\) 袋を何個目まで処理したか \(][\) \(T\) の接頭辞のうちどこまで一致させられたか \(] = \) { 必要な最小金額 } を実現しましょう。

\(i+1\) 袋目に入っている文字列 \(X\) を \(S\) の末尾に連結することを考えます。この時、 \(dp[i][|S|]\) から \(dp[i+1][|S|+|X|]\) に遷移するためには、 \(T\) の \(|S|+1\) 文字目から \(|S|+|X|\) 文字目を取り出した文字列が \(X\) と一致する必要があります。

今回の制約下では、この判定を愚直に行っても構いません。

また、何もしないということは \(dp[i][j]\) から \(dp[i+1][j]\) への遷移に対応します。

以上の DP を実装すると、この問題に \(O(NM|S||T|)\) といった時間計算量で正解できます。 ( \(M\) … 袋に入った文字列の個数 )

実装例(C++):



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
