
問題概要

• N 個のオセロの駒を黒の面が上向きになるように
一列に並べる

• その後、ある区間にある駒を全て裏返すという操作を
Q 回行う
• 最終的な盤面を求めよ

部分点(60点)

• N, Q ≦2,000 と小さい

• 愚直にひっくり返すのをシミュレーションしよう！
• 一回の操作につき最大で N 個の駒を裏返す
• 計算量はO(NQ)

満点(100点) 考察

• 石の数も操作回数も多いので愚直にシミュレーション
しては間に合わない
• まとめてシミュレーションのようなことは可能か？
• ここで

– 偶数回裏返された駒は黒の面が上を向く
– 奇数回裏返された駒は白の面が上を向く

ことに着目しよう

• 各駒について裏返された回数だけ分かればよい

満点(100点) 考察

• ある範囲に裏返した回数を 1 加算する
という操作ができれば解けることがわかった
• これを実現する方法はいくつか存在する
– セグメント木
– BIT

– etc.

• ここではいもす法と呼ばれるテクニックを紹介する

いもす法

• いもす法は加算、構築、取得の 3 つの処理からなる
– 加算: 区間[l, r] に v だけ加算する

– 構築: ある位置の値が求められるようにする
– 取得: ある位置の値を求める

• 加算 O(1)，構築 O(N)，取得 O(1) を実現する

– ただし、構築後にさらに加算する、構築せずに取得する
などの操作は許されない

具体的な処理

• 基本的なアイデアは以下の 2 つ
– 差分を覚えておく

– 累積和により構築する
• 加算処理では

– l 番目の値に v 加算する

– r + 1 番目の値に –v 加算する

• 構築処理では

– i (1 ≦ i ≦ N – 1)番目の値を i + 1 番目の値に加算する

• すると各位置の値がそれぞれ求まる

愚直シミュレーション

いもす法

1

2

3

4

5

6

7

• 初期状態

1

2

3

4

5

6

7

1

2

3

4

5

6

7

• [2, 4] に 2 を加算

1

2

3

4

5

6

7

1

2

3

4

5

6

7

• [4, 4] に 3 を加算

1

2

3

4

5

6

7

1

2

3

4

5

6

7

1

2

3

4

5

6

7

1

2

3

4

5

6

7

0
0
0

1
1

0
2
2

2
3

0
2
2

3
3

0
2
5

4
6

0
0
0

5
1

0
0
0

6
1

0
0
0

7
0

1

2

3

4

5

6

7

1

2

3

4

5

6

7

1

1

3

3

3

3

6

6

1

1

0

0

0

0

• [1, 6] に 1 を加算
• いもす法の方は
累積和を取る
• 最終的な結果は同じ！！

0
0
0
1
1

1

0
2
2
2
3

3

0
0
0
0

3

3

0

0

0

0 -2 0
3 -5 0

0
0
0

3 -5 0 -1
6

6

1

1

1

0

0

0

解法

• 各操作を「区間 [l, r] に 1 加算する」処理とみなす
• いもす法など適当な方法によりこれを処理する
• それぞれの駒について、偶数回裏返されたならば 0 、
奇数回裏返されたならば 1 を出力する
• 計算量は O(N + Q)

