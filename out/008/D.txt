金塊ゲーム

©AtCoder Inc. All rights reserved.

28

• N 個の装置と W×H 個の金塊についての情報が与
えられます。
• 最適に装置を動かして、できるだけ多くの金塊を

取ってください。
• 1 ≦ N ≦ 30
• 1 ≦ R ≦ 10^9
• 1 ≦ C ≦ 10^9
©AtCoder Inc. All rights reserved.

29

•

•

ある装置を稼働させた後の状態を考える。

M

©AtCoder Inc. All rights reserved.

31

•

ある装置を稼働させた後の状態を考える。

•

下図のように、1 つの長方形領域が最大 4 つの長方形領
域に分かれる。

M

©AtCoder Inc. All rights reserved.

32

•

ある装置を稼働させた後の状態を考える。

•

下図のように、1 つの長方形領域が最大 4 つの長方形領
域に分かれる。

•

これらの領域同士は互いに干渉しないので、独立に最適解
を求めて、それらの合計を用いれば元の解が求まる。

M

©AtCoder Inc. All rights reserved.

33

•

このように、ある大きさにおける最適解を求める際
に、より小さい部分の最適解を求めてその値を用
いて元の最適解を求める手法一般を動的計画法と
言います。

•

この問題では動的計画法を用いて効率的に解くこ

とができます。

©AtCoder Inc. All rights reserved.

34

•

dp[i][j][k][l]=(左下を(i,j), 右上を(k,l) とした長方形領
域が残った際の最適解)

•

とおくことにより、O(R^2×C^2) の空間計算量、各
dp で O(N) 通りの選択と適用により計算できるの
で、全体で O(N×R^2×C^2) となります。(99点)

©AtCoder Inc. All rights reserved.

35

•

動的計画法を実行する際には、今回の場合、長方
形の面積が小さい順から行います。

•

また、今回の場合、参照される長方形のうち最初
のもの以外のすべてはある装置がつくる 2 辺を用
いるので、実際は状態数は少ないです。

©AtCoder Inc. All rights reserved.

36

•

R と C が大きい場合は、これまでの方法では状態
が多すぎて間に合いません。

•

しかしながら、直線が連続する区間とかは圧縮して
計算できそうです。
コンパクトにまとめる

©AtCoder Inc. All rights reserved.

37

•

今回の問題では、
→動的計画法: 座標圧縮で節約
→メモ化探索: 余計な状態を生成しない

という方針で対策することができます。
•

この方針であれば 100 点を得ることが出来ます。

•

メモリ制限には注意してください！

©AtCoder Inc. All rights reserved.

38


