
		公式
		
			
				C - Graph Isomorphism 解説
			
			by KoD
			
		
		
		
		
			整数 \(X_{i, j}\) を、高橋君のおもちゃにおいてボール \(i, j\) を結ぶひもが存在するなら \(1\)、そうでないなら \(0\) と定めます。
同様に、整数 \(Y_{i, j}\) を、青木君のおもちゃにおいてボール \(i, j\) を結ぶひもが存在するなら \(1\)、そうでないなら \(0\) と定めます。

\((1, 2, \dots, N)\) を並べ替えて得られる順列 \(P\) を全探索することを考えます。\(P\) が条件をみたすことは、次が成り立つことと同値です。


任意の \(1 \leq i \leq N, 1 \leq j \leq N\) に対し \(X_{i, j} =  Y_{P_i, P_j}\)


これが成り立つかどうかは \(O(N^2)\) で判定することができます。\(P\) としては \(N!\) 通りあるので、全体の計算量は \(O(N^2 \times N!)\) となり、実行時間制限に間に合います。

順列の全列挙は、C++ であれば std::next_permutations、Python であれば itertools.permutations を使うのがよいでしょう。

実装例 (C++) :



実装例 (Python) :



		
		
			
				投稿日時:
				
				
			
				
				最終更新:
				
				
			
			
		
	
